<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.demo.dao.AdminWorkOrderInformDao">

    <resultMap type="com.example.demo.entity.AdminWorkOrderInform" id="AdminWorkOrderInformMap">
        <result property="rollbackOldOrder" column="rollback_old_order" jdbcType="VARCHAR"/>
        <result property="changedOldOrder" column="changed_old_order" jdbcType="VARCHAR"/>
        <result property="workOrderNum" column="work_order_num" jdbcType="VARCHAR"/>
        <result property="workOrderName" column="work_order_name" jdbcType="VARCHAR"/>
        <result property="workOrderType" column="work_order_type" jdbcType="VARCHAR"/>
        <result property="applyTime" column="apply_time" jdbcType="TIMESTAMP"/>
        <result property="workerNum" column="worker_num" jdbcType="INTEGER"/>
        <result property="file" column="file" jdbcType="VARCHAR"/>
        <result property="workOrderState" column="work_order_state" jdbcType="VARCHAR"/>
        <result property="reason" column="reason" jdbcType="VARCHAR"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
        <result property="depNum" column="dep_num" jdbcType="VARCHAR"/>
        <result property="phone" column="phone" jdbcType="VARCHAR"/>
        <result property="state" column="state" jdbcType="VARCHAR"/>
        <result property="inService" column="in_service" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询指定行数据，带有条件分页-->
    <select id="criteriaQueryByPage" resultMap="AdminWorkOrderInformMap" parameterType="com.example.demo.entity.AdminWorkOrderInform">
        select
          rollback_old_order, changed_old_order, work_order_num, work_order_name, work_order_type, apply_time, worker_num, file, work_order_state, reason, name, dep_num, phone, state, in_service
        from admin_work_order_inform
        <where>
            <if test="adminWorkOrderInform.rollbackOldOrder != null and adminWorkOrderInform.rollbackOldOrder != ''">
                and rollback_old_order = #{adminWorkOrderInform.rollbackOldOrder}
            </if>
            <if test="adminWorkOrderInform.changedOldOrder != null and adminWorkOrderInform.changedOldOrder != ''">
                and changed_old_order = #{adminWorkOrderInform.changedOldOrder}
            </if>
            <if test="adminWorkOrderInform.workOrderNum != null and adminWorkOrderInform.workOrderNum != ''">
                and work_order_num = #{adminWorkOrderInform.workOrderNum}
            </if>
            <if test="adminWorkOrderInform.workOrderName != null and adminWorkOrderInform.workOrderName != ''">
                and work_order_name = #{adminWorkOrderInform.workOrderName}
            </if>
            <if test="adminWorkOrderInform.workOrderType != null and adminWorkOrderInform.workOrderType != ''">
                and work_order_type = #{adminWorkOrderInform.workOrderType}
            </if>
            <if test="adminWorkOrderInform.applyTime != null">
                and apply_time = #{adminWorkOrderInform.applyTime}
            </if>
            <if test="adminWorkOrderInform.workerNum != null">
                and worker_num = #{adminWorkOrderInform.workerNum}
            </if>
            <if test="adminWorkOrderInform.file != null and adminWorkOrderInform.file != ''">
                and file = #{adminWorkOrderInform.file}
            </if>
            <if test="adminWorkOrderInform.workOrderState != null and adminWorkOrderInform.workOrderState != ''">
                and work_order_state = #{adminWorkOrderInform.workOrderState}
            </if>
            <if test="adminWorkOrderInform.reason != null and adminWorkOrderInform.reason != ''">
                and reason = #{adminWorkOrderInform.reason}
            </if>
            <if test="adminWorkOrderInform.name != null and adminWorkOrderInform.name != ''">
                and name = #{adminWorkOrderInform.name}
            </if>
            <if test="adminWorkOrderInform.depNum != null and adminWorkOrderInform.depNum != ''">
                and dep_num = #{adminWorkOrderInform.depNum}
            </if>
            <if test="adminWorkOrderInform.phone != null and adminWorkOrderInform.phone != ''">
                and phone = #{adminWorkOrderInform.phone}
            </if>
            <if test="adminWorkOrderInform.state != null">
                and state = #{adminWorkOrderInform.state}
            </if>
            <if test="adminWorkOrderInform.inService != null">
                and in_service = #{adminWorkOrderInform.inService}
            </if>
        </where>
        limit #{pageRequest.offset}, #{pageRequest.pageSize}
    </select>

    <!--查询指定行数据，无条件分页-->
    <select id="queryAllByLimit" resultMap="AdminWorkOrderInformMap">
        select
            rollback_old_order, changed_old_order, work_order_num, work_order_name, work_order_type, apply_time, worker_num, file, work_order_state, reason, name, dep_num, phone, state, in_service
        from admin_work_order_inform
                 limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数，无条件分页-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from admin_work_order_inform
    </select>

    <!--统计总行数，有条件分页-->
    <select id="criteriaCount" resultType="java.lang.Long">
        select count(1)
        from admin_work_order_inform
        <where>
            <if test="adminWorkOrderInform.rollbackOldOrder != null and adminWorkOrderInform.rollbackOldOrder != ''">
                and rollback_old_order = #{adminWorkOrderInform.rollbackOldOrder}
            </if>
            <if test="adminWorkOrderInform.changedOldOrder != null and adminWorkOrderInform.changedOldOrder != ''">
                and changed_old_order = #{adminWorkOrderInform.changedOldOrder}
            </if>
            <if test="adminWorkOrderInform.workOrderNum != null and adminWorkOrderInform.workOrderNum != ''">
                and work_order_num = #{adminWorkOrderInform.workOrderNum}
            </if>
            <if test="adminWorkOrderInform.workOrderName != null and adminWorkOrderInform.workOrderName != ''">
                and work_order_name = #{adminWorkOrderInform.workOrderName}
            </if>
            <if test="adminWorkOrderInform.workOrderType != null and adminWorkOrderInform.workOrderType != ''">
                and work_order_type = #{adminWorkOrderInform.workOrderType}
            </if>
            <if test="adminWorkOrderInform.applyTime != null">
                and apply_time = #{adminWorkOrderInform.applyTime}
            </if>
            <if test="adminWorkOrderInform.workerNum != null">
                and worker_num = #{adminWorkOrderInform.workerNum}
            </if>
            <if test="adminWorkOrderInform.file != null and adminWorkOrderInform.file != ''">
                and file = #{adminWorkOrderInform.file}
            </if>
            <if test="adminWorkOrderInform.workOrderState != null and adminWorkOrderInform.workOrderState != ''">
                and work_order_state = #{adminWorkOrderInform.workOrderState}
            </if>
            <if test="adminWorkOrderInform.reason != null and adminWorkOrderInform.reason != ''">
                and reason = #{adminWorkOrderInform.reason}
            </if>
            <if test="adminWorkOrderInform.name != null and adminWorkOrderInform.name != ''">
                and name = #{adminWorkOrderInform.name}
            </if>
            <if test="adminWorkOrderInform.depNum != null and adminWorkOrderInform.depNum != ''">
                and dep_num = #{adminWorkOrderInform.depNum}
            </if>
            <if test="adminWorkOrderInform.phone != null and adminWorkOrderInform.phone != ''">
                and phone = #{adminWorkOrderInform.phone}
            </if>
            <if test="adminWorkOrderInform.state != null">
                and state = #{adminWorkOrderInform.state}
            </if>
            <if test="adminWorkOrderInform.inService != null">
                and in_service = #{adminWorkOrderInform.inService}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="" useGeneratedKeys="true">
        insert into admin_work_order_inform(rollback_old_order, changed_old_order, work_order_num, work_order_name, work_order_type, apply_time, worker_num, file, work_order_state, reason, name, dep_num, phone, state, in_service)
        values (#{rollbackOldOrder}, #{changedOldOrder}, #{workOrderNum}, #{workOrderName}, #{workOrderType}, #{applyTime}, #{workerNum}, #{file}, #{workOrderState}, #{reason}, #{name}, #{depNum}, #{phone}, #{state}, #{inService})
    </insert>

    <insert id="insertBatch" keyProperty="" useGeneratedKeys="true">
        insert into admin_work_order_inform(rollback_old_order, changed_old_order, work_order_num, work_order_name, work_order_type, apply_time, worker_num, file, work_order_state, reason, name, dep_num, phone, state, in_service)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.rollbackOldOrder}, #{entity.changedOldOrder}, #{entity.workOrderNum}, #{entity.workOrderName}, #{entity.workOrderType}, #{entity.applyTime}, #{entity.workerNum}, #{entity.file}, #{entity.workOrderState}, #{entity.reason}, #{entity.name}, #{entity.depNum}, #{entity.phone}, #{entity.state}, #{entity.inService})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="" useGeneratedKeys="true">
        insert into admin_work_order_inform(rollback_old_order, changed_old_order, work_order_num, work_order_name, work_order_type, apply_time, worker_num, file, work_order_state, reason, name, dep_num, phone, state, in_service)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.rollbackOldOrder}, #{entity.changedOldOrder}, #{entity.workOrderNum}, #{entity.workOrderName}, #{entity.workOrderType}, #{entity.applyTime}, #{entity.workerNum}, #{entity.file}, #{entity.workOrderState}, #{entity.reason}, #{entity.name}, #{entity.depNum}, #{entity.phone}, #{entity.state}, #{entity.inService})
        </foreach>
        on duplicate key update
        rollback_old_order = values(rollback_old_order),
        changed_old_order = values(changed_old_order),
        work_order_num = values(work_order_num),
        work_order_name = values(work_order_name),
        work_order_type = values(work_order_type),
        apply_time = values(apply_time),
        worker_num = values(worker_num),
        file = values(file),
        work_order_state = values(work_order_state),
        reason = values(reason),
        name = values(name),
        dep_num = values(dep_num),
        phone = values(phone),
        state = values(state),
        in_service = values(in_service)
    </insert>

</mapper>

