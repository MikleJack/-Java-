<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.back2.dao.view.InformSenderRecipentNameDao">

    <resultMap type="com.example.back2.entity.view.InformSenderRecipentName" id="InformSenderRecipentNameMap">
        <result property="informNum" column="inform_num" jdbcType="INTEGER"/>
        <result property="senderNum" column="sender_num" jdbcType="INTEGER"/>
        <result property="details" column="details" jdbcType="VARCHAR"/>
        <result property="workOrderNum" column="work_order_num" jdbcType="VARCHAR"/>
        <result property="recipient" column="recipient" jdbcType="INTEGER"/>
        <result property="sendTime" column="send_time" jdbcType="TIMESTAMP"/>
        <result property="readState" column="read_state" jdbcType="VARCHAR"/>
        <result property="senderName" column="sender_name" jdbcType="VARCHAR"/>
        <result property="recipentName" column="recipient_name" jdbcType="VARCHAR"/>
        <result property="workOrderName" column="work_order_name" jdbcType="VARCHAR"/>
    </resultMap>


    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="InformSenderRecipentNameMap">
        select
          inform_num, sender_num, details, work_order_num, recipient, send_time, read_state, sender_name, recipient_name
        from inform_sender_recipient_name
        <where>
            <if test="informNum != null">
                and inform_num = #{informNum}
            </if>
            <if test="senderNum != null">
                and sender_num = #{senderNum}
            </if>
            <if test="details != null and details != ''">
                and details = #{details}
            </if>
            <if test="workOrderNum != null and workOrderNum != ''">
                and work_order_num = #{workOrderNum}
            </if>
            <if test="recipient != null">
                and recipient = #{recipient}
            </if>
            <if test="sendTime != null">
                and send_time = #{sendTime}
            </if>
            <if test="readState != null">
                and read_state = #{readState}
            </if>
            <if test="senderName != null and senderName != ''">
                and sender_name = #{senderName}
            </if>
            <if test="recipient_name != null and recipient_name != ''">
                and recipient_name = #{recipentName}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from inform_sender_recipient_name
        <where>
            <if test="informNum != null">
                and inform_num = #{informNum}
            </if>
            <if test="senderNum != null">
                and sender_num = #{senderNum}
            </if>
            <if test="details != null and details != ''">
                and details = #{details}
            </if>
            <if test="workOrderNum != null and workOrderNum != ''">
                and work_order_num = #{workOrderNum}
            </if>
            <if test="recipient_name != null">
                and recipient_name = #{recipient}
            </if>
            <if test="sendTime != null">
                and send_time = #{sendTime}
            </if>
            <if test="readState != null">
                and read_state = #{readState}
            </if>
            <if test="senderName != null and senderName != ''">
                and sender_name = #{senderName}
            </if>
            <if test="recipentName != null and recipentName != ''">
                and recipent_name = #{recipentName}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="" useGeneratedKeys="true">
        insert into inform_sender_recipient_name(inform_num, sender_num, details, work_order_num, recipient, send_time, read_state, sender_name, recipient_name)
        values (#{informNum}, #{senderNum}, #{details}, #{workOrderNum}, #{recipient}, #{sendTime}, #{readState}, #{senderName}, #{recipientName})
    </insert>

    <insert id="insertBatch" keyProperty="" useGeneratedKeys="true">
        insert into inform_sender_recipient_name(inform_num, sender_num, details, work_order_num, recipient, send_time, read_state, sender_name, recipient_name)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.informNum}, #{entity.senderNum}, #{entity.details}, #{entity.workOrderNum}, #{entity.recipient}, #{entity.sendTime}, #{entity.readState}, #{entity.senderName}, #{entity.recipientName})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="" useGeneratedKeys="true">
        insert into inform_sender_recipient_name(inform_num, sender_num, details, work_order_num, recipient, send_time, read_state, sender_name, recipent_name)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.informNum}, #{entity.senderNum}, #{entity.details}, #{entity.workOrderNum}, #{entity.recipient}, #{entity.sendTime}, #{entity.readState}, #{entity.senderName}, #{entity.recipentName})
        </foreach>
        on duplicate key update
        inform_num = values(inform_num),
        sender_num = values(sender_num),
        details = values(details),
        work_order_num = values(work_order_num),
        recipient = values(recipient),
        send_time = values(send_time),
        read_state = values(read_state),
        sender_name = values(sender_name),
        recipient_name = values(recipientName)
    </insert>

    <!--根据员工编号统计总行数-->
    <select id="countByWorkerNum" resultType="java.lang.Long">
        select count(1)
        from inform_sender_recipient_name
        where recipient = #{workerNum}
    </select>

    <!--根据员工编号查询指定行数据-->
    <select id="queryAllByLimitWorkerNum" resultMap="InformSenderRecipentNameMap">
        select
        inform_num, sender_num, details, work_order_num, recipient, send_time, read_state, sender_name, recipient_name, work_order_name
        from inform_sender_recipient_name
        where recipient = #{workerNum}
        order by send_time desc
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

</mapper>

