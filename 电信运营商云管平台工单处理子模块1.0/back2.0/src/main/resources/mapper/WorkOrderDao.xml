<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.back2.dao.table.WorkOrderDao">

    <resultMap type="com.example.back2.entity.table.WorkOrder" id="WorkOrderMap">
        <result property="workOrderNum" column="work_order_num" jdbcType="VARCHAR"/>
        <result property="workOrderType" column="work_order_type" jdbcType="VARCHAR"/>
        <result property="workOrderName" column="work_order_name" jdbcType="VARCHAR"/>
        <result property="expirationTime" column="expiration_time" jdbcType="TIMESTAMP"/>
        <result property="workerNum" column="worker_num" jdbcType="INTEGER"/>
        <result property="file" column="file" jdbcType="VARCHAR"/>
        <result property="workOrderState" column="work_order_state" jdbcType="VARCHAR"/>
        <result property="reason" column="reason" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="NUMERIC"/>
        <result property="offlineReason" column="offline_reason" jdbcType="VARCHAR"/>
    </resultMap>


<!--    统计即将过期工单数量-->
    <select id="getAboutTicket" resultType="java.lang.Long" >
        select count (1)
        from work_order
        where worker_num = #{workerNum} and expiration_time  #{ddl}
    </select>

<!--    统计待审批工单数量-->
    <select id="getNumPendticket" resultType="java.lang.Long">
        select count(1)
        from work_order
        where worker_num = #{workerNum} and work_order_state = '待审批'
    </select>

<!--    统计审批不通过工单数量-->
    <select id="getNumFailedtickets" resultType="java.lang.Long">
        select count(1)
        from work_order
        where worker_num = #{workerNum} and work_order_state = '审批不通过'
    </select>
<!--    通过工号查询通过了二级审批通过的工单号-->
    <select id="selectWorkOrderByworkNum" resultMap="WorkOrderMap">
        select
            work_order_num
        from work_order
        where worker_num = #{workerNum} and work_order_state = '二级审批通过'
        order by work_order_num desc
    </select>

    <!--查询单个-->
    <select id="queryById" resultMap="WorkOrderMap">
        select
          work_order_num, work_order_type, work_order_name, expiration_time, worker_num, file, work_order_state, reason, price, offline_reason
        from work_order
        where work_order_num = #{workOrderNum}
    </select>

    <!--根据员工编号查询指定行数据-->
    <select id="criteriaQueryAllByLimit" resultMap="WorkOrderMap">
        select
        work_order_num, work_order_type, work_order_name, expiration_time, worker_num, file, work_order_state, reason, price, offline_reason
        from work_order
        where worker_num = #{workerNum}
        order by work_order_num desc
            limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="WorkOrderMap">
        select
          work_order_num, work_order_type, work_order_name, expiration_time, worker_num, file, work_order_state, reason, price, offline_reason
        from work_order
        <where>
            <if test="workOrderNum != null and workOrderNum != ''">
                and work_order_num = #{workOrderNum}
            </if>
            <if test="workOrderType != null and workOrderType != ''">
                and work_order_type = #{workOrderType}
            </if>
            <if test="workOrderName != null and workOrderName != ''">
                and work_order_name = #{workOrderName}
            </if>
            <if test="expirationTime != null">
                and expiration_time = #{expirationTime}
            </if>
            <if test="workerNum != null">
                and worker_num = #{workerNum}
            </if>
            <if test="file != null and file != ''">
                and file = #{file}
            </if>
            <if test="workOrderState != null and workOrderState != ''">
                and work_order_state = #{workOrderState}
            </if>
            <if test="reason != null and reason != ''">
                and reason = #{reason}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="offlineReason != null and offlineReason != ''">
                and offline_reason = #{offlineReason}
            </if>
        </where>
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>

    <!--统计总行数-->
    <select id="count" resultType="java.lang.Long">
        select count(1)
        from work_order
        <where>
            <if test="workOrderNum != null and workOrderNum != ''">
                and work_order_num = #{workOrderNum}
            </if>
            <if test="workOrderType != null and workOrderType != ''">
                and work_order_type = #{workOrderType}
            </if>
            <if test="workOrderName != null and workOrderName != ''">
                and work_order_name = #{workOrderName}
            </if>
            <if test="expirationTime != null">
                and expiration_time = #{expirationTime}
            </if>
            <if test="workerNum != null">
                and worker_num = #{workerNum}
            </if>
            <if test="file != null and file != ''">
                and file = #{file}
            </if>
            <if test="workOrderState != null and workOrderState != ''">
                and work_order_state = #{workOrderState}
            </if>
            <if test="reason != null and reason != ''">
                and reason = #{reason}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="offlineReason != null and offlineReason != ''">
                and offline_reason = #{offlineReason}
            </if>
        </where>
    </select>

    <!--统计总行数-->
    <select id="criteriaCount" resultType="java.lang.Long">
        select count(1)
        from work_order
        where worker_num = #{workerNum}
    </select>

    <!--新增所有列-->
<!--    keyProperty="workOrderNum"-->
    <insert id="insert" useGeneratedKeys="true">
        insert into work_order(work_order_num,work_order_type, work_order_name, expiration_time, worker_num, file, work_order_state, reason, price, offline_reason)
        values (#{workOrderNum},#{workOrderType}, #{workOrderName}, #{expirationTime}, #{workerNum}, #{file}, #{workOrderState}, #{reason}, #{price}, #{offlineReason})
    </insert>

    <insert id="insertBatch" keyProperty="workOrderNum" useGeneratedKeys="true">
        insert into work_order(work_order_type, work_order_name, expiration_time, worker_num, file, work_order_state, reason, price, offline_reason)
        values
        <foreach collection="entities" item="entity" separator=",">
        (#{entity.workOrderType}, #{entity.workOrderName}, #{entity.expirationTime}, #{entity.workerNum}, #{entity.file}, #{entity.workOrderState}, #{entity.reason}, #{entity.price}, #{entity.offlineReason})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="workOrderNum" useGeneratedKeys="true">
        insert into work_order(work_order_type, work_order_name, expiration_time, worker_num, file, work_order_state, reason, price, offline_reason)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.workOrderType}, #{entity.workOrderName}, #{entity.expirationTime}, #{entity.workerNum}, #{entity.file}, #{entity.workOrderState}, #{entity.reason}, #{entity.price}, #{entity.offlineReason})
        </foreach>
        on duplicate key update
        work_order_type = values(work_order_type),
        work_order_name = values(work_order_name),
        expiration_time = values(expiration_time),
        worker_num = values(worker_num),
        file = values(file),
        work_order_state = values(work_order_state),
        reason = values(reason),
        price = values(price),
        offline_reason = values(offline_reason)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update work_order
        <set>
            <if test="workOrderType != null and workOrderType != ''">
                work_order_type = #{workOrderType},
            </if>
            <if test="workOrderName != null and workOrderName != ''">
                work_order_name = #{workOrderName},
            </if>
            <if test="expirationTime != null">
                expiration_time = #{expirationTime},
            </if>
            <if test="workerNum != null">
                worker_num = #{workerNum},
            </if>
            <if test="file != null and file != ''">
                file = #{file},
            </if>
            <if test="workOrderState != null and workOrderState != ''">
                work_order_state = #{workOrderState},
            </if>
            <if test="reason != null and reason != ''">
                reason = #{reason},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="offlineReason != null and offlineReason != ''">
                offline_reason = #{offlineReason},
            </if>
        </set>
        where work_order_num = #{workOrderNum}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from work_order where work_order_num = #{workOrderNum}
    </delete>

    <!--将工单下线-->
    <update id="offline">
        update work_order
        <set>
            work_order_state = "下线",
            offline_reason = #{offlineReason}
        </set>
        where work_order_num = #{workOrderNum}
    </update>

    <!--插入延期工单-->
    <insert id="insertDelayWorkOrder" useGeneratedKeys="true">
        insert into work_order(work_order_num,work_order_type, work_order_name, expiration_time, worker_num, file, work_order_state, reason, price, offline_reason)
        values (#{workOrderNum}, #{workOrderType}, #{workOrderName}, #{expirationTime}, #{workerNum}, #{file}, #{workOrderState}, #{reason}, #{price}, #{offlineReason})
    </insert>


    <!--员工全部工单查询界面    查询按钮-顶部-->
    <!--    统计总行数-->
    <select id="parameterCount" resultType="java.lang.Long">
        select count(1)
        from work_order
        where work_order_type = #{workOrderType} and worker_num = #{workerNum} and work_order_name LIKE '%${workerTitle}%'
    </select>

    <!--查询指定行数据-->
    <select id="parameterQueryAllByLimit" resultMap="WorkOrderMap">
        select
        work_order_num, work_order_type, work_order_name, expiration_time, worker_num, file, work_order_state, reason, price, offline_reason
        from work_order
        <where>
            <if test="workOrderType != null and workOrderType != ''">
                and work_order_type = #{workOrderType}
            </if>
            <if test="workerTitle != null and workerTitle != ''">
                and work_order_name LIKE '%${workerTitle}%'
            </if>
            <if test="workerNum != null">
                and worker_num = #{workerNum}
            </if>
        </where>
        order by work_order_num desc
        limit #{pageable.offset}, #{pageable.pageSize}
    </select>
<!--员工全部工单查询界面    查询按钮-底部-->

</mapper>

